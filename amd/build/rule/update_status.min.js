define("local_notificationsagent/rule/update_status",["exports","core/str","core/notification","core/modal_factory","core/modal_events","core/templates","local_notificationsagent/rule/repository","jquery"],(function(_exports,_str,_notification,_modal_factory,_modal_events,_templates,_repository,_jquery){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * Version details
   *
   * @copyright  2023 Proyecto UNIMOODLE
   * @author     UNIMOODLE Group (Coordinator) <direccion.area.estrategia.digital@uva.es>
   * @author     ISYC <soporte@isyc.com>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_notification=_interopRequireDefault(_notification),_modal_factory=_interopRequireDefault(_modal_factory),_modal_events=_interopRequireDefault(_modal_events),_templates=_interopRequireDefault(_templates),_jquery=_interopRequireDefault(_jquery);const STATUS_TYPE_RESUMED=0,STATUS_TYPE_PAUSED=1,selectors_updateStatusRuleId='[id^="status-rule-"]:not(.disabled)',selectors_updateStatusRuleDataState="data-status";_exports.init=async()=>{document.querySelectorAll(selectors_updateStatusRuleId).forEach((updateStatusItem=>{updateStatusItem.addEventListener("click",(async function(){await showModal(updateStatusItem)}))}))};const showModal=async updateStatusItem=>{let ruleObj={};ruleObj.id=updateStatusItem.dataset.ruleid,ruleObj.title=document.querySelector("#card-"+ruleObj.id+" .name").textContent,ruleObj.status=updateStatusItem.dataset.status==STATUS_TYPE_RESUMED?STATUS_TYPE_RESUMED:STATUS_TYPE_PAUSED,ruleObj.status?ruleObj.name=await(0,_str.get_string)("status_activatetitle","local_notificationsagent",ruleObj):ruleObj.name=await(0,_str.get_string)("status_pausetitle","local_notificationsagent",ruleObj),_modal_factory.default.create({type:_modal_factory.default.types.SAVE_CANCEL,title:ruleObj.name,body:_templates.default.render("local_notificationsagent/modal/update_status",{rule:ruleObj})}).then((function(modal){let isPaused=ruleObj.status?STATUS_TYPE_RESUMED:STATUS_TYPE_PAUSED,updateStatusBtnText=isPaused?(0,_str.get_string)("statuspause","local_notificationsagent"):(0,_str.get_string)("statusactivate","local_notificationsagent");return modal.setSaveButtonText(updateStatusBtnText),modal.getRoot().on(_modal_events.default.save,(function(){setRuleStatus(ruleObj.id,isPaused)})),modal.getRoot().on(_modal_events.default.hidden,(function(){modal.destroy()})),modal.show(),!0}))},setRuleStatus=async(id,status)=>{try{let response=await(0,_repository.updateRuleStatus)(id,status);if(_jquery.default.isEmptyObject(response.warnings)){let updateStatusItem=document.querySelector("a#status-rule-"+id),updateStatusItemIcon=document.createElement("i"),updateStatusItemText="",updateStatusItemMessage="",cardBadge=document.querySelector("#card-"+id+" .badge-status");status?(updateStatusItemText=await(0,_str.get_string)("statusactivate","local_notificationsagent"),updateStatusItem.setAttribute(selectors_updateStatusRuleDataState,STATUS_TYPE_PAUSED),updateStatusItemIcon.className="fa fa-play mr-2",updateStatusItemMessage=await(0,_str.get_string)("status_acceptpaused","local_notificationsagent"),cardBadge.classList.contains("badge-required")||(cardBadge.classList.remove("badge-active"),cardBadge.classList.add("badge-paused"),cardBadge.querySelector("span").textContent=await(0,_str.get_string)("status_paused","local_notificationsagent"))):(updateStatusItemText=await(0,_str.get_string)("statuspause","local_notificationsagent"),updateStatusItem.setAttribute(selectors_updateStatusRuleDataState,STATUS_TYPE_RESUMED),updateStatusItemIcon.className="fa fa-pause mr-2",updateStatusItemMessage=await(0,_str.get_string)("status_acceptactivated","local_notificationsagent"),cardBadge.classList.contains("badge-required")||(cardBadge.classList.remove("badge-paused"),cardBadge.classList.add("badge-active"),cardBadge.querySelector("span").textContent=await(0,_str.get_string)("status_active","local_notificationsagent"))),updateStatusItem.innerHTML="",updateStatusItem.appendChild(updateStatusItemIcon),updateStatusItem.appendChild(document.createTextNode(updateStatusItemText)),_notification.default.addNotification({message:updateStatusItemMessage,type:"info"})}else _notification.default.addNotification({message:response.warnings[0].message,type:"error"})}catch(exception){_notification.default.exception(exception)}}}));

//# sourceMappingURL=update_status.min.js.map