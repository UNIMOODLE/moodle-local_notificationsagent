define("local_notificationsagent/rule/unshareall",["exports","core/str","core/notification","core/modal_factory","core/modal_events","core/templates","local_notificationsagent/rule/repository","jquery"],(function(_exports,_str,_notification,_modal_factory,_modal_events,_templates,_repository,_jquery){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * Version details
   *
   * @copyright  2023 Proyecto UNIMOODLE
   * @author     UNIMOODLE Group (Coordinator) <direccion.area.estrategia.digital@uva.es>
   * @author     ISYC <soporte@isyc.com>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_notification=_interopRequireDefault(_notification),_modal_factory=_interopRequireDefault(_modal_factory),_modal_events=_interopRequireDefault(_modal_events),_templates=_interopRequireDefault(_templates),_jquery=_interopRequireDefault(_jquery);const selectors_unshareAllRuleId='[id^="unshare-all-rule-"]:not(.disabled)';_exports.init=async()=>{document.querySelectorAll(selectors_unshareAllRuleId).forEach((unshareAllItem=>{unshareAllItem.addEventListener("click",(async function(){await showModal(unshareAllItem)}))}))};const showModal=async unshareAllItem=>{let ruleObj={};ruleObj.id=unshareAllItem.dataset.ruleid,ruleObj.title=document.querySelector("#card-"+ruleObj.id+" .name").textContent,ruleObj.name=await(0,_str.get_string)("unsharealltitle","local_notificationsagent",ruleObj),_modal_factory.default.create({type:_modal_factory.default.types.SAVE_CANCEL,title:ruleObj.name,body:_templates.default.render("local_notificationsagent/modal/unshareall",{rule:ruleObj})}).then((function(modal){return modal.setSaveButtonText((0,_str.get_string)("editrule_unshareallrule","local_notificationsagent")),modal.getRoot().on(_modal_events.default.save,(function(){setUnshareAllRule(ruleObj.id)})),modal.getRoot().on(_modal_events.default.hidden,(function(){modal.destroy()})),modal.show(),!0}))},setUnshareAllRule=async id=>{try{let response=await(0,_repository.unshareAllRule)(id);_jquery.default.isEmptyObject(response.warnings)?(0,_str.get_string)("sharereject","local_notificationsagent").then((ruleUnshared=>{document.querySelector("#card-"+id).remove(),_notification.default.addNotification({message:ruleUnshared,type:"info"})})):_notification.default.addNotification({message:response.warnings[0].message,type:"error"})}catch(exception){_notification.default.exception(exception)}}}));

//# sourceMappingURL=unshareall.min.js.map